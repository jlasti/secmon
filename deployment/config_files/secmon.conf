# Templates
template(name="TmplAuthpriv" type="list") {
    constant(value="/var/log/secmon/")
    property(name="hostname")
    constant(value="/secure")
}

template(name="TmplMsg" type="list") {
    constant(value="/var/log/secmon/")
    property(name="hostname")
    constant(value="/messages")
}

template(name="TmplCron" type="list") {
    constant(value="/var/log/secmon/")
    property(name="hostname")
    constant(value="/cron")
}


$template RSYSLOG_TraditionalFileFormat_WithPRI,"%pri% %timegenerated% %HOSTNAME% %syslogtag%%msg:::drop-last-lf%\n"

# TCP syslog reception with templates
module(load="imtcp")
ruleset(name="secmon_ruleset"){
        $umask 0026
        authpriv.* action(type="omfile" DynaFile="TmplAuthpriv" dirCreateMode="0750" dirOwner="root" dirGroup="secmon" fileOwner="root" fileGroup="secmon" fileCreateMode="0666" template="RSYSLOG_TraditionalFileFormat_WithPRI")
        *.info;mail.none;authpriv.none;cron.none action(type="omfile" DynaFile="TmplMsg" dirCreateMode="0750" dirOwner="root" dirGroup="secmon" fileOwner="root" fileGroup="secmon" fileCreateMode="0640" template="RSYSLOG_TraditionalFileFormat_WithPRI")
        cron.* action(type="omfile" DynaFile="TmplCron" dirCreateMode="0750" dirOwner="root" dirGroup="secmon" fileOwner="root" fileGroup="secmon" fileCreateMode="0640" template="RSYSLOG_TraditionalFileFormat_WithPRI")
}
input(type="imtcp" port="514" ruleset="secmon_ruleset" )

# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
$ActionQueueFileName fwdRule1 # unique name prefix for spool files
$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
$ActionQueueType LinkedList   # run asynchronously
$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
*.* @@127.0.0.1:514
# ### end of the forwarding rule ###
